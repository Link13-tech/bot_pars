from aiogram import Router, types, F
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from parser.parser import parse_all_items, parse_last_uploaded_items
from database.db import clear_last_uploaded
import asyncio
from aiogram.utils.chat_action import ChatActionSender

router = Router()


@router.message(F.text.lower() == "/items")
async def ask_parsing_mode(message: types.Message):
    """–í—ã–≤–æ–¥–∏—Ç –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞."""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîÑ –ü–∞—Ä—Å–∏—Ç—å –≤—Å—é –±–∞–∑—É", callback_data="parse_all")],
        [InlineKeyboardButton(text="üÜï –ü–∞—Ä—Å–∏—Ç—å —Ç–æ–ª—å–∫–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ", callback_data="parse_uploaded")]
    ])
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –ø–∞—Ä—Å–∏–Ω–≥–∞:", reply_markup=keyboard)


@router.callback_query(lambda c: c.data in ["parse_all", "parse_uploaded"])
async def start_parsing(callback: CallbackQuery):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞."""
    bot = callback.bot
    await callback.answer()
    await callback.message.delete()

    loading_message = await callback.message.answer("‚è≥ –û–∂–∏–¥–∞–π—Ç–µ, –∏–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö...")
    # sticker = await callback.message.answer_sticker("CAACAgIAAxkBAAEFgFZlKThlZx3nVjX1E8eBQnG3YxRPWAACAwADr8ZRGk_tuAABU6NvNAQ")

    async with ChatActionSender.typing(bot=bot, chat_id=callback.message.chat.id):
        await asyncio.sleep(3)

        if callback.data == "parse_all":
            items = parse_all_items()
        else:
            items = parse_last_uploaded_items()
            await clear_last_uploaded()

    await loading_message.delete()
    # await sticker.delete()

    if items:
        response = "üì¶ –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤:\n"
        for title, url, price in items:
            response += f"<b>{title}</b> - {url} - <b>–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞:</b> {price} —Ä—É–±.\n\n" if price else f"{title} - –¶–µ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.\n\n"
        await callback.message.answer(response)
    else:
        await callback.message.answer("‚ö†Ô∏è –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
